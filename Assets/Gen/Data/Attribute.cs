//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Data
{

public sealed partial class Attribute :  Bright.Config.BeanBase 
{
    public Attribute(JSONNode _json) 
    {
        { if(!_json["Attribute_HP"].IsNumber) { throw new SerializationException(); }  AttributeHP = _json["Attribute_HP"]; }
        { if(!_json["Attribute_MP"].IsNumber) { throw new SerializationException(); }  AttributeMP = _json["Attribute_MP"]; }
        { if(!_json["Attribute_Harm"].IsNumber) { throw new SerializationException(); }  AttributeHarm = _json["Attribute_Harm"]; }
        { if(!_json["Attribute_CritHarm"].IsNumber) { throw new SerializationException(); }  AttributeCritHarm = _json["Attribute_CritHarm"]; }
        { if(!_json["Attribute_CriticalChance"].IsNumber) { throw new SerializationException(); }  AttributeCriticalChance = _json["Attribute_CriticalChance"]; }
        { if(!_json["Attribute_MoveSpeed"].IsNumber) { throw new SerializationException(); }  AttributeMoveSpeed = _json["Attribute_MoveSpeed"]; }
        { if(!_json["Attribute_JumpHeight"].IsNumber) { throw new SerializationException(); }  AttributeJumpHeight = _json["Attribute_JumpHeight"]; }
        PostInit();
    }

    public Attribute(int Attribute_HP, int Attribute_MP, float Attribute_Harm, float Attribute_CritHarm, float Attribute_CriticalChance, float Attribute_MoveSpeed, float Attribute_JumpHeight ) 
    {
        this.AttributeHP = Attribute_HP;
        this.AttributeMP = Attribute_MP;
        this.AttributeHarm = Attribute_Harm;
        this.AttributeCritHarm = Attribute_CritHarm;
        this.AttributeCriticalChance = Attribute_CriticalChance;
        this.AttributeMoveSpeed = Attribute_MoveSpeed;
        this.AttributeJumpHeight = Attribute_JumpHeight;
        PostInit();
    }

    public static Attribute DeserializeAttribute(JSONNode _json)
    {
        return new Data.Attribute(_json);
    }

    public int AttributeHP { get; private set; }
    public int AttributeMP { get; private set; }
    public float AttributeHarm { get; private set; }
    public float AttributeCritHarm { get; private set; }
    public float AttributeCriticalChance { get; private set; }
    public float AttributeMoveSpeed { get; private set; }
    public float AttributeJumpHeight { get; private set; }

    public const int __ID__ = -1558065832;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "AttributeHP:" + AttributeHP + ","
        + "AttributeMP:" + AttributeMP + ","
        + "AttributeHarm:" + AttributeHarm + ","
        + "AttributeCritHarm:" + AttributeCritHarm + ","
        + "AttributeCriticalChance:" + AttributeCriticalChance + ","
        + "AttributeMoveSpeed:" + AttributeMoveSpeed + ","
        + "AttributeJumpHeight:" + AttributeJumpHeight + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
