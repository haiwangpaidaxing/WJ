//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Data
{

public sealed partial class RoleData :  Bright.Config.BeanBase 
{
    public RoleData(JSONNode _json) 
    {
        { if(!_json["untID"].IsNumber) { throw new SerializationException(); }  UntID = _json["untID"]; }
        { if(!_json["unitName"].IsString) { throw new SerializationException(); }  UnitName = _json["unitName"]; }
        { if(!_json["ResName"].IsString) { throw new SerializationException(); }  ResName = _json["ResName"]; }
        { if(!_json["RoleAttribute"].IsObject) { throw new SerializationException(); }  RoleAttribute = Data.Attribute.DeserializeAttribute(_json["RoleAttribute"]);  }
        PostInit();
    }

    public RoleData(int untID, string unitName, string ResName, Data.Attribute RoleAttribute ) 
    {
        this.UntID = untID;
        this.UnitName = unitName;
        this.ResName = ResName;
        this.RoleAttribute = RoleAttribute;
        PostInit();
    }

    public static RoleData DeserializeRoleData(JSONNode _json)
    {
        return new Data.RoleData(_json);
    }

    /// <summary>
    /// 英雄ID
    /// </summary>
    public int UntID { get; private set; }
    /// <summary>
    /// 英雄名称
    /// </summary>
    public string UnitName { get; private set; }
    /// <summary>
    /// 资源名字
    /// </summary>
    public string ResName { get; private set; }
    /// <summary>
    /// 血量
    /// </summary>
    public Data.Attribute RoleAttribute { get; private set; }

    public const int __ID__ = -456306940;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        RoleAttribute?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        RoleAttribute?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "UntID:" + UntID + ","
        + "UnitName:" + UnitName + ","
        + "ResName:" + ResName + ","
        + "RoleAttribute:" + RoleAttribute + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
